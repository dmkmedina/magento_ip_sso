<?php
class Developmint_Ipsconnectsso_Model_Observer {

    /*
     * Observer function that verifies with the IPS Connect network that
     * the changes are allowed.
     */
    public function adminCustomerSaveBefore($observer) {
        $helper = Mage::helper('ipsconnectsso');
        $request = $observer->getEvent()->getRequest();
        $data = $request->getPost('account');

        $customerId = $request->getParam('customer_id');

        if (!$customerId) {
            //customer does not yet exist on the network
            if (!$helper->emailIsAvailableWithNetwork($data['email'])) {
                $this->errorRedirect($customerId, 'The provided e-mail address is already in use.');
                exit;
            }
        }else {
            $customer = Mage::getModel('customer/customer');
            $customer->load($customerId);

            if ($customer->getEmail() != $data['email'] && !$helper->emailIsAvailableWithNetwork($data['email'])) {
                $this->errorRedirect($customerId, 'The provided e-mail address is already in use.');
                exit;
            }

            //here we do the actual update with the network
            $params = array();
            $params['email'] = $data['email'];
            $params['customer_id'] = $customerId;

            if ($data['new_password'] != '') {
                $params['password'] = $data['new_password'];
            }

            $result = $helper->updateCustomerWithNetwork($params);
            if ($result != Developmint_Ipsconnectsso_Helper_Data::CONNECT_STATUS_SUCCESS) {
                //if the update failed on the network, do not update locally
                $this->errorRedirect($customerId, $result);
                exit;
            }
        }
    }

    public function adminCustomerSaveAfter($observer) {
        $helper = Mage::helper('ipsconnectsso');
        $request = $observer->getEvent()->getRequest();
        $data = $request->getPost('account');
        $customer = $observer->getCustomer();

        //Mage::log('customer id: ' . $customer->getId());
        //Mage::log($data);
        $connect_id = Mage::getModel('ipsconnectsso/ipsmagentocustomermap')
            ->getCollection()
            ->getConnectIdFromCustomerId($customer->getId());

        if ($connect_id < 0) {
            //need to register the customer with the network
            $result = $helper->registerCustomerWithNetwork($data['email'], $data['password'], $customer->getId());

            Mage::log($result);
            if (!$result) {
                Mage::getSingleton('adminhtml/session')->addError('An error occured when attempting '.
                    'to register the customer with the IPS Connect Network');
            }
        }
    }

    public function customerDeleteBefore($observer) {
        $helper = Mage::helper('ipsconnectsso');
        $customer = $observer->getCustomer();

        $result = $helper->deleteCustomerFromNetwork($customer->getId());
        Mage::log($result);
        //Mage::log('DELETE BEFORE: ' . $customer->getId());
    }

    /*
     * This observer function is called each time a customer is successfully billed for
     * an order. We check the order to see if their First and Last name were auto
     * generated by the SSO script. If so, update their name with their billing name
     */
    public function updateCustomerName($observer) {
        $order = $observer->getEvent()->getOrder();
        $customer = Mage::getModel("customer/customer");
        $customer->setWebsiteId(Mage::app()->getWebsite()->getId());
        $customer->load($order->getCustomerId());

        if (!$customer->getId()) {
            return;
        }

        if ($customer->getFirstname() == 'First Name' && $customer->getLastname() == 'Last Name') {
            $bill_address = $order->getBillingAddress();

            $customer->setFirstname($bill_address->getFirstname());
            $customer->setLastname($bill_address->getLastname());
            $customer->save();
        }
    }

    protected function errorRedirect($customer_id, $message) {
        $url = Mage::getModel('adminhtml/url')->getUrl('*/customer/edit', array('id' => $customer_id));

        Mage::getSingleton('adminhtml/session')->addError($message);
        Mage::app()
            ->getResponse()
            ->setRedirect($url);

        Mage::app()
            ->getResponse()
            ->sendResponse();
    }
}